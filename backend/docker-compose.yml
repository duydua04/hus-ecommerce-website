services:
  db:
    image: postgres:16
    container_name: website_db
    environment:
      POSTGRES_USER: mywebsite
      POSTGRES_PASSWORD: password
      POSTGRES_DB: websitedb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mywebsite -d websitedb"]
      interval: 5s
      timeout: 5s
      retries: 10

  minio:
    image: minio/minio:latest
    container_name: ecom_minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio12345
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web console
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 20

  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minio minio12345;
      mc mb -p local/ecommerce || true;
      mc anonymous set download local/ecommerce;
      exit 0;
      "

  api:
    build: .
    container_name: website_api
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-setup:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app  # hot reload khi dev

volumes:
  pgdata:
  minio-data:
